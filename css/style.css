/* universal to reset the page */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

/* define the animation and apply to the class of text */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem) rotate(0deg); }
  /* 60% {
    transform: rotate(180deg)
  } */
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 1.6rem; */
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 6rem;
  /* fix shaking animation */
  backface-visibility: hidden; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 2s;
    animation-timing-function: ease-out;
    /* 
    animation-delay:3s;
    animation-iteration-count: 3
    */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.6rem;
    animation: moveInRight 2s ease-out; }

/* .btn:link pseudo class with state of the btn selector */
.btn {
  /* after element */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all 0.2s;
    font-size: 1.6rem;
    /* reference for button after */
    position: relative; }
  .btn:hover {
    transform: translateY(-3px);
    /* x y direction and blur */
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
    /* we want to see it when hover certain style after */ }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    /* put behind the button */
    position: absolute;
    top: 0;
    left: 0;
    /* zindex define postion of element if it on top on another  value -1: behind */
    z-index: -1;
    transition: all 0.4s; }
  .btn--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    /* always apply 0% */
    animation-fill-mode: backwards; }

.header {
  height: 95vh;
  /* 2 background overlap */
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.7), rgba(40, 180, 133, 0.7)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  /* clip the image */
  clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

.row {
  max-width: 114rem;
  background-color: #eee;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    background-color: orangered;
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc( 2*(100% - 2 * 6rem) / 3  + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc( 2*(100% - 3 * 6rem) / 4 + 6rem); }
  .row .col-3-of-4 {
    width: calc( 3*(100% - 3 * 6rem) / 4 + 2*6rem); }
